openapi: 3.0.0
info:
  title: User API
  version: "1.0.0"
paths:
  /user:
    get:
      tags: [User]
      summary: Retrieve paginated list of users
      parameters:
        - in: query
          name: page
          schema:
            type: number
          description: Page number
        - in: query
          name: limit
          schema:
            type: number
          description: Items per page
        - in: query
          name: search
          schema:
            type: string
          description: Optional search term for filtering users
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
    post:
      tags: [User]
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              # ... user properties schema ...
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
  /user/{id}:
    get:
      tags: [User]
      summary: Retrieve a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
    patch:
      tags: [User]
      summary: Update an existing user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              # ... updatable user properties schema ...
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
    delete:
      tags: [User]
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        role:
          type: string
        phoneNumber:
          type: string
          nullable: true
      required:
        - id
        - firstName
        - lastName
        - email
        - role
